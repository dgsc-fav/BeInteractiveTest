package com.github.dgsc_fav.beinteractivetest.db.entity;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.github.dgsc_fav.beinteractivetest.db.table.CitiesTable;
import com.github.dgsc_fav.beinteractivetest.provider.CitiesMeta;
import com.pushtorefresh.storio.contentresolver.annotations.StorIOContentResolverColumn;
import com.pushtorefresh.storio.contentresolver.annotations.StorIOContentResolverType;
import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteColumn;
import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteType;

/**
 * Created by DG on 23.10.2016.
 */
// This annotation will trigger annotation processor
// Which will generate type mapping code in compile time,
// You just need to link it in your code.
@StorIOSQLiteType(table = CitiesTable.TABLE)
@StorIOContentResolverType(uri = CitiesMeta.URI_STRING)
public class CityEntity {
    /**
     * If object was not inserted into db, id will be null
     */
    @Nullable
    @StorIOSQLiteColumn(name = CitiesTable.COLUMN_ID, key = true)
    @StorIOContentResolverColumn(name = CitiesTable.COLUMN_ID, key = true)
    Long id;

    @NonNull
    @StorIOSQLiteColumn(name = CitiesTable.COLUMN_CITY)
    @StorIOContentResolverColumn(name = CitiesTable.COLUMN_CITY)
    String city;


    // leave default constructor for AutoGenerated code!
    CityEntity() {
    }

    private CityEntity(@Nullable Long id, @NonNull String city) {
        this.id = id;
        this.city = city;
    }

    @NonNull
    public static CityEntity newCity(@Nullable Long id, @NonNull String city) {
        return new CityEntity(id, city);
    }

    @NonNull
    public static CityEntity newCity(@NonNull String city) {
        return new CityEntity(null, city);
    }

    @Nullable
    public Long id() {
        return id;
    }

    @NonNull
    public String city() {
        return city;
    }

    // BTW, you can use AutoValue/AutoParcel to get immutability and code generation for free
    // Check our tests, we have examples!
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        CityEntity cityEntity = (CityEntity) o;

        if (id != null ? !id.equals(cityEntity.id) : cityEntity.id != null) return false;
        return this.city.equals(cityEntity.city);
    }

    @Override
    public int hashCode() {
        int result = id != null ? id.hashCode() : 0;
        result = 31 * result + city.hashCode();
        return result;
    }

    @Override
    public String toString() {
        return "City{" +
                "id=" + id +
                ", city='" + city + '\'' +
                '}';
    }
}
